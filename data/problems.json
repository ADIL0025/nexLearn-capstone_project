{ 
    "problems": [
        {
            "id": 1,
            "title": "Contains Duplicate",
            "boilerplate": {
                "java": "public class Solution {\n\tpublic boolean containsDuplicate(int[] nums) {\n\t\t// Write your code here\n\t}\n}",
                "cpp": "bool containsDuplicate(vector<int>& nums) {\n\t// Write your code here\n}",
                "python": "def containsDuplicate(nums):\n\t# Write your code here",
                "javascript": "function containsDuplicate(nums) {\n\t// Write your code here\n}"
            },
            "solution": {
                "java": "public class Solution { public boolean containsDuplicate(int[] nums) { Set<Integer> set = new HashSet<>(); for (int num : nums) { if (!set.add(num)) return true; } return false; } }",
                "cpp": "bool containsDuplicate(vector<int>& nums) { unordered_set<int> s; for (int num : nums) { if (s.count(num)) return true; s.insert(num); } return false; }",
                "python": "def containsDuplicate(nums): return len(nums) != len(set(nums))",
                "javascript": "function containsDuplicate(nums) { return new Set(nums).size !== nums.length; }"
            },
            "testCases": [
              { "input": "[1, 2, 3, 3]", "expectedOutput": "true" },
              { "input": "[1, 2, 3, 4]", "expectedOutput": "false" },
              { "input": "[]", "expectedOutput": "false" },
              { "input": "[-1, -2, -3, -3]", "expectedOutput": "true" }
            ]
        },
        {}
    ]
  }